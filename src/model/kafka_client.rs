// This file is @generated by prost-build.
#[derive(derive_builder::Builder)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ClientConfigRequest {
    #[prost(string, tag = "1")]
    pub client_id: ::prost::alloc::string::String,
    /// security info here as well
    #[prost(string, tag = "2")]
    pub bootstrap_servers: ::prost::alloc::string::String,
}
#[derive(derive_builder::Builder)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MetadataResponse {
    #[prost(message, repeated, tag = "1")]
    pub topic: ::prost::alloc::vec::Vec<Topic>,
}
#[derive(derive_builder::Builder)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Topic {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "2")]
    pub partition: ::prost::alloc::vec::Vec<Partition>,
}
#[derive(derive_builder::Builder)]
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Partition {
    #[prost(int32, tag = "1")]
    pub id: i32,
    #[prost(int32, tag = "2")]
    pub leader: i32,
    #[prost(int32, repeated, tag = "3")]
    pub replicas: ::prost::alloc::vec::Vec<i32>,
    #[prost(int32, tag = "4")]
    pub isr: i32,
}
